// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tipo {
  id       Int      @id @default(autoincrement())
  nome     String   @db.VarChar(30)
  lanches  Lanche[]
  @@map("tipos")
}

model Lanche {
  id          Int      @id @default(autoincrement())
  nome        String   @db.VarChar(50)
  descricao   String   @db.Text
  preco       Decimal  @db.Decimal(10, 2)
  imagem      String
  destaque    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tipo        Tipo     @relation(fields: [tipoId], references: [id])
  tipoId      Int
  admin       Admin        @relation(fields: [adminId], references: [id])
  adminId     Int          @default(1)
  imagens     Imagem[]
  pedidos     Pedido[]
  @@map("lanches")
}


model Imagem {
  id            Int      @id @default(autoincrement())
  descricao     String   @db.VarChar(30)
  codigoImagem  String   @db.Text
  lanche        Lanche   @relation(fields: [lancheId], references: [id], onDelete: Cascade)
  lancheId      Int
  @@map("imagens")
}


model Pedido {
  id          Int       @id @default(autoincrement())
  cliente     Cliente   @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  clienteId   String    @db.VarChar(36)
  lanche      Lanche    @relation(fields: [lancheId], references: [id])
  lancheId    Int
  descricao   String    @db.VarChar(255)
  entrega     String?   @db.VarChar(255)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt  
  @@map("pedidos")
}

model Cliente {
  id                String   @id @db.VarChar(36) @default(uuid())
  nome              String   @db.VarChar(60)
  email             String   @db.VarChar(60) @unique
  senha             String   @db.VarChar(60)
  codigoRecuperacao String?  // Mudar para String para armazenar o código de 4 dígitos
  codigoGeradoAt    DateTime? // Novo campo para armazenar o timestamp
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  pedidos           Pedido[]
}

model Admin {
  id           Int      @id @default(autoincrement())
  nome         String   @db.VarChar(60)
  email        String   @db.VarChar(60) @unique
  senha        String   @db.VarChar(60)   // senha deve ser varchar(60)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt  
  lanches      Lanche[]
  @@map("admins")
}